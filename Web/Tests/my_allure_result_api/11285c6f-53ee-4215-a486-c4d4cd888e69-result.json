{"name": "test_E2E_Add_from_phone", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=109.0.5414.120)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x00A46643]\n\t(No symbol) [0x009DBE21]\n\t(No symbol) [0x008DDA9D]\n\t(No symbol) [0x008BEF6A]\n\t(No symbol) [0x00933AAB]\n\t(No symbol) [0x009461B6]\n\t(No symbol) [0x0092FB76]\n\t(No symbol) [0x009049C1]\n\t(No symbol) [0x00905E5D]\n\tGetHandleVerifier [0x00CBA142+2497106]\n\tGetHandleVerifier [0x00CE85D3+2686691]\n\tGetHandleVerifier [0x00CEBB9C+2700460]\n\tGetHandleVerifier [0x00AF3B10+635936]\n\t(No symbol) [0x009E4A1F]\n\t(No symbol) [0x009EA418]\n\t(No symbol) [0x009EA505]\n\t(No symbol) [0x009F508B]\n\tBaseThreadInitThunk [0x76BB00F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77387BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77387B8E+238]", "trace": "self = <Web.Tests.test_home.Test_Home_Page object at 0x000001AFB9A10910>\n\n    @allure.description('Add product from phone ')\n    @pytest.mark.sanity\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_E2E_Add_from_phone(self):\n        driver = self.driver\n        login = home_menus(driver)\n>       login.Add_from_phone_product_Category()\n\ntest_home.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\page_home.py:126: in Add_from_phone_product_Category\n    self.driver.find_element(By.XPATH, f\"/html[1]/body[1]/div[5]/div[1]/div[2]/div[1]/div[{count+1}]/div[1]/div[1]/h4[1]/a[1]\").click()\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:830: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001AFB9B31AD0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77387BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77387B8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=109.0.5414.120)\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x00A46643]\nE       \t(No symbol) [0x009DBE21]\nE       \t(No symbol) [0x008DDA9D]\nE       \t(No symbol) [0x008BEF6A]\nE       \t(No symbol) [0x00933AAB]\nE       \t(No symbol) [0x009461B6]\nE       \t(No symbol) [0x0092FB76]\nE       \t(No symbol) [0x009049C1]\nE       \t(No symbol) [0x00905E5D]\nE       \tGetHandleVerifier [0x00CBA142+2497106]\nE       \tGetHandleVerifier [0x00CE85D3+2686691]\nE       \tGetHandleVerifier [0x00CEBB9C+2700460]\nE       \tGetHandleVerifier [0x00AF3B10+635936]\nE       \t(No symbol) [0x009E4A1F]\nE       \t(No symbol) [0x009EA418]\nE       \t(No symbol) [0x009EA505]\nE       \t(No symbol) [0x009F508B]\nE       \tBaseThreadInitThunk [0x76BB00F9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77387BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77387B8E+238]\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchWindowException"}, "description": "Add product from phone ", "steps": [{"name": "Add_from_phone_product_Category", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=109.0.5414.120)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x00A46643]\n\t(No symbol) [0x009DBE21]\n\t(No symbol) [0x008DDA9D]\n\t(No symbol) [0x008BEF6A]\n\t(No symbol) [0x00933AAB]\n\t(No symbol) [0x009461B6]\n\t(No symbol) [0x0092FB76]\n\t(No symbol) [0x009049C1]\n\t(No symbol) [0x00905E5D]\n\tGetHandleVerifier [0x00CBA142+2497106]\n\tGetHandleVerifier [0x00CE85D3+2686691]\n\tGetHandleVerifier [0x00CEBB9C+2700460]\n\tGetHandleVerifier [0x00AF3B10+635936]\n\t(No symbol) [0x009E4A1F]\n\t(No symbol) [0x009EA418]\n\t(No symbol) [0x009EA505]\n\t(No symbol) [0x009F508B]\n\tBaseThreadInitThunk [0x76BB00F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77387BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77387B8E+238]\n\n", "trace": "  File \"C:\\Users\\Henok\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\Henok\\Desktop\\Demoblaze_Selenium_Project\\Web\\Pages\\page_home.py\", line 126, in Add_from_phone_product_Category\n    self.driver.find_element(By.XPATH, f\"/html[1]/body[1]/div[5]/div[1]/div[2]/div[1]/div[{count+1}]/div[1]/div[1]/h4[1]/a[1]\").click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Henok\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 830, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Henok\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Henok\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "click_on_phone_category", "status": "passed", "start": 1675668626314, "stop": 1675668628388}, {"name": "Click_Back", "status": "passed", "start": 1675668632248, "stop": 1675668632357}, {"name": "click_on_phone_category", "status": "passed", "start": 1675668633359, "stop": 1675668635409}, {"name": "Click_Back", "status": "passed", "start": 1675668640071, "stop": 1675668640185}, {"name": "click_on_phone_category", "status": "passed", "start": 1675668641186, "stop": 1675668643277}], "start": 1675668625312, "stop": 1675668643281}], "attachments": [{"name": "stdout", "source": "d4c4a2af-0167-4d55-9566-d134dd045bbc-attachment.txt", "type": "text/plain"}], "start": 1675668625312, "stop": 1675668643304, "uuid": "b5b7f32e-a2b2-4c0f-8b36-76e5d2dc2b81", "historyId": "fb30384a117b4d94866a64d50d4b040b", "testCaseId": "850dea2907680aa57d9d70d24ae21d90", "fullName": "test_home.Test_Home_Page#test_E2E_Add_from_phone", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "sanity"}, {"name": "suite", "value": "test_home"}, {"name": "subSuite", "value": "Test_Home_Page"}, {"name": "host", "value": "DESKTOP-4H4LEB1"}, {"name": "thread", "value": "20000-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_home"}]}