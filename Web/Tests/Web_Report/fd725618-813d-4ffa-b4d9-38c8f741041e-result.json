{"name": "test_verify_add_to_cart_empty_name", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoAlertPresentException: Message: no such alert\n  (Session info: chrome=109.0.5414.120)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x01186643]\n\t(No symbol) [0x0111BE21]\n\t(No symbol) [0x0101D960]\n\t(No symbol) [0x01016180]\n\t(No symbol) [0x01031038]\n\t(No symbol) [0x0106FDF4]\n\t(No symbol) [0x01030DC7]\n\t(No symbol) [0x0106FB76]\n\t(No symbol) [0x010449C1]\n\t(No symbol) [0x01045E5D]\n\tGetHandleVerifier [0x013FA142+2497106]\n\tGetHandleVerifier [0x014285D3+2686691]\n\tGetHandleVerifier [0x0142BB9C+2700460]\n\tGetHandleVerifier [0x01233B10+635936]\n\t(No symbol) [0x01124A1F]\n\t(No symbol) [0x0112A418]\n\t(No symbol) [0x0112A505]\n\t(No symbol) [0x0113508B]\n\tBaseThreadInitThunk [0x76BB00F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77387BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77387B8E+238]", "trace": "self = <Web.Tests.test_order.Test_Place_Order object at 0x0000020DE274EA50>\n\n    @allure.description('Test_Place_Order')\n    @pytest.mark.sanity\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_verify_add_to_cart_empty_name(self):\n        driver = self.driver\n        home = cart_steps(driver)\n        home.click_on_home_button()\n        home.wait = WebDriverWait(self.driver, 10)\n        home.click_on_categories()\n        home.click_on_phone()\n        home.click_on_samsung_galaxyssword()\n        home.click_on_add_to_cart()\n        home.alert = driver.switch_to.alert\n        home.alert.accept()\n        order = place_order(driver)\n        order.varify_cart_clickable()\n        order.varify_place_order_clickable()\n        order.insert_data_to_name_input(\"  \")\n        order.insert_data_to_country_input(\"israel\")\n        order.insert_data_to_city_input(\"beer sheva\")\n        order.insert_data_to_credit_card_input(\"15432454\")\n        order.insert_data_to_month_input(\"9\")\n        order.insert_data_to_year_input(\"1990\")\n>       alert = order.driver.switch_to.alert\n\ntest_order.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\switch_to.py:55: in alert\n    _ = alert.text\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\common\\alert.py:59: in text\n    return self.driver.execute(Command.W3C_GET_ALERT_TEXT)[\"value\"]\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000020DE2C71AD0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such alert\",\"message\":\"no such alert\\\\n  (Session info: chrome=109.0.5...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77387BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77387B8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoAlertPresentException: Message: no such alert\nE         (Session info: chrome=109.0.5414.120)\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x01186643]\nE       \t(No symbol) [0x0111BE21]\nE       \t(No symbol) [0x0101D960]\nE       \t(No symbol) [0x01016180]\nE       \t(No symbol) [0x01031038]\nE       \t(No symbol) [0x0106FDF4]\nE       \t(No symbol) [0x01030DC7]\nE       \t(No symbol) [0x0106FB76]\nE       \t(No symbol) [0x010449C1]\nE       \t(No symbol) [0x01045E5D]\nE       \tGetHandleVerifier [0x013FA142+2497106]\nE       \tGetHandleVerifier [0x014285D3+2686691]\nE       \tGetHandleVerifier [0x0142BB9C+2700460]\nE       \tGetHandleVerifier [0x01233B10+635936]\nE       \t(No symbol) [0x01124A1F]\nE       \t(No symbol) [0x0112A418]\nE       \t(No symbol) [0x0112A505]\nE       \t(No symbol) [0x0113508B]\nE       \tBaseThreadInitThunk [0x76BB00F9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77387BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77387B8E+238]\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoAlertPresentException"}, "description": "Test_Place_Order", "steps": [{"name": "click_on_home_button", "status": "passed", "start": 1675640105397, "stop": 1675640107755}, {"name": "click_on_categories", "status": "passed", "start": 1675640107755, "stop": 1675640109935}, {"name": "click_on_phone", "status": "passed", "start": 1675640109935, "stop": 1675640112063}, {"name": "click_on_samsung_galaxyssword", "status": "passed", "start": 1675640112063, "stop": 1675640114769}, {"name": "click_on_add_to_cart", "status": "passed", "start": 1675640114769, "stop": 1675640116820}, {"name": "varify_cart_clickable", "status": "passed", "start": 1675640116828, "stop": 1675640118954}, {"name": "varify_place_order_clickable", "status": "passed", "start": 1675640118954, "stop": 1675640120029}, {"name": "insert_data_to_name_input", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected_chrome", "value": "'  '"}, {"name": "actual", "value": "'  '"}, {"name": "expected_firefox", "value": "None"}], "start": 1675640121215, "stop": 1675640121215}], "parameters": [{"name": "user_Name", "value": "'  '"}], "start": 1675640120029, "stop": 1675640121215}, {"name": "insert_data_to_country_input", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected_chrome", "value": "'israel'"}, {"name": "actual", "value": "'israel'"}, {"name": "expected_firefox", "value": "None"}], "start": 1675640122389, "stop": 1675640122389}], "parameters": [{"name": "user_country", "value": "'israel'"}], "start": 1675640121215, "stop": 1675640122389}, {"name": "insert_data_to_city_input", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected_chrome", "value": "'beer sheva'"}, {"name": "actual", "value": "'beer sheva'"}, {"name": "expected_firefox", "value": "None"}], "start": 1675640123526, "stop": 1675640123526}], "parameters": [{"name": "user_city", "value": "'beer sheva'"}], "start": 1675640122389, "stop": 1675640123526}, {"name": "insert_data_to_credit_card_input", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected_chrome", "value": "'15432454'"}, {"name": "actual", "value": "'15432454'"}, {"name": "expected_firefox", "value": "None"}], "start": 1675640124692, "stop": 1675640124692}], "parameters": [{"name": "user_creditCard", "value": "'15432454'"}], "start": 1675640123527, "stop": 1675640124692}, {"name": "insert_data_to_month_input", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected_chrome", "value": "'9'"}, {"name": "actual", "value": "'9'"}, {"name": "expected_firefox", "value": "None"}], "start": 1675640126897, "stop": 1675640126897}], "parameters": [{"name": "user_month", "value": "'9'"}], "start": 1675640124692, "stop": 1675640126897}, {"name": "insert_data_to_year_input", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected_chrome", "value": "'1990'"}, {"name": "actual", "value": "'1990'"}, {"name": "expected_firefox", "value": "None"}], "start": 1675640129090, "stop": 1675640129090}], "parameters": [{"name": "user_Year", "value": "'1990'"}], "start": 1675640126897, "stop": 1675640129090}], "attachments": [{"name": "stdout", "source": "ad3327a4-6ed1-491b-ad19-39b0e9769ddd-attachment.txt", "type": "text/plain"}], "start": 1675640105397, "stop": 1675640129093, "uuid": "b8fbe84c-086a-4835-bcd0-6b51d2ebc4a7", "historyId": "2425f821b96c30e28db2e4ead5a19347", "testCaseId": "04cc21ecc372d65921654d149ab56f39", "fullName": "test_order.Test_Place_Order#test_verify_add_to_cart_empty_name", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "sanity"}, {"name": "suite", "value": "test_order"}, {"name": "subSuite", "value": "Test_Place_Order"}, {"name": "host", "value": "DESKTOP-4H4LEB1"}, {"name": "thread", "value": "8008-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_order"}]}